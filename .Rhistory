document$category
runApp('Documents/webmap')
runApp('Documents/webmap')
document <- rbind(master, d1, d2)
document
document$lon
leaflet(data) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
pal <- colorFactor(
palette = "YlGnBu",
domain = document$category
)
leaflet(data) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet(data) %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet() %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lat), lat = as.numeric(document$lon))
head(document)
master <- data.frame(id=numeric(0), category=character(0), lat=character(0), lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude, lon=document[[1]]$location$longitude, id=document[[1]]$id, name=document[[1]]$location$street$name, month=document[[1]]$month, outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude, lon=document[[2]]$location$longitude, id=document[[2]]$id, name=document[[2]]$location$street$name, month=document[[2]]$month, outcome_status=document[[2]]$outcome_status$category)
document <- lapply(dates, function(month) {
# format acceptable packet for http request
curl.string <- list(poly=c(curl.string), date=c(month))
# post custom polygon to police api (note: post needed as appending curl string to url is too long)
r <- httr::POST("https://data.police.uk/api/crimes-street/all-crime", body = curl.string, encode="multipart", verbose())
json <- content(r, "text")
jsonlite::fromJSON(txt=json)
})
dates = c("2015-12", "2016-01")
dates = c("2015-12", "2016-01")
document <- lapply(dates, function(month) {
# format acceptable packet for http request
curl.string <- list(poly=c(curl.string), date=c(month))
# post custom polygon to police api (note: post needed as appending curl string to url is too long)
r <- httr::POST("https://data.police.uk/api/crimes-street/all-crime", body = curl.string, encode="multipart", verbose())
json <- content(r, "text")
jsonlite::fromJSON(txt=json)
})
master <- data.frame(id=numeric(0), category=character(0), lat=character(0), lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude, lon=document[[1]]$location$longitude, id=document[[1]]$id, name=document[[1]]$location$street$name, month=document[[1]]$month, outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude, lon=document[[2]]$location$longitude, id=document[[2]]$id, name=document[[2]]$location$street$name, month=document[[2]]$month, outcome_status=document[[2]]$outcome_status$category)
document <- rbind(master, d1, d2)
document$category <- gsub('-', ' ', document$category)
# Capitalise each word in string for aesthetical plot
document$category <- paste(toupper(substring(document[,c("category")], 1, 1)), substring(document[,c("category")], 2), sep="")
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
pal <- colorFactor(
palette = "YlGnBu",
domain = document$category
)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
head(document)
runApp('Documents/webmap')
nrow(document)
master
document
head(document)
document$lat
document$lon
head(document)
leaflet(document) %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat))
head(document)
head(document)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(lon), lat = as.numeric(lat))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric("-2.987587"), lat = as.numeric("53.418677"))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(-2.987587), lat = as.numeric(53.418677))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(-2.987587), lat = as.numeric(53.418677))
document$lon
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(53.418677))
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet() %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(document$lat), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet(document) %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(53.418677))
leaflet() %>% addTiles() %>% addCircles(lng = as.numeric(document$lon), lat = as.numeric(53.418677))
head(document)
leaflet() %>% addTiles() %>% addCircles(lng = lons, lat = lats)
lats <- c(53.418677,53.412057)
lons <- c(-2.987587, -2.949340)
leaflet() %>% addTiles() %>% addCircles(lng = lons, lat = lats)
lats <- document$lat
lons <- document$lon
lats
lats <- document$lat
lons <- document$lon
leaflet() %>% addTiles() %>% addCircles(lng = as.numeric(lons), lat = as.numeric(lats), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
lats <- document$lat
lats[sample(lats), 10]
lats[sample(lats, 10),]
lats[sample(lats, 10)]
lats <- document$lat
lats <- lats[sample(lats, 10)]
lats
lons <- document$lon
lons <- lons[sample(lons, 10)]
lons
leaflet() %>% addTiles() %>% addCircles(lng = as.numeric(lons), lat = as.numeric(lats), color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
head(document)
as.numeric(document$lat)
document$lat
document
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
})
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category))
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category)), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category), weight =1,
popup =   paste("<b>Crime:</b> ", document$category, "<br>",
"<b>Date:</b> <i>", document$month, "</i><br>",
"<b>Location:</b> ", document$name, "<br>",
"<b>Outcome:</b> ", document$outcome_status, "<br>")) %>% addLegend("bottomleft", values = document$category, pal = pal)
document
document$lon
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category)
)
names(document)
document <- lapply(dates, function(month) {
# format acceptable packet for http request
curl.string <- list(poly=c(curl.string), date=c(month))
# post custom polygon to police api (note: post needed as appending curl string to url is too long)
r <- httr::POST("https://data.police.uk/api/crimes-street/all-crime", body = curl.string, encode="multipart", verbose())
json <- content(r, "text")
jsonlite::fromJSON(txt=json)
})
document
str(document[[1]])
leaflet() %>% addTiles() %>% addCircles(lng = document[[1]]$lon, lat = document[[1]]$lat)
leaflet() %>% addTiles() %>% addCircles(lng =document[[1]]$location$longitude, lat = document[[1]]$location$latitude)
master <- data.frame(id=numeric(0), category=character(0), lat=character(0), lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude, lon=document[[1]]$location$longitude, id=document[[1]]$id, name=document[[1]]$location$street$name, month=document[[1]]$month, outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude, lon=document[[2]]$location$longitude, id=document[[2]]$id, name=document[[2]]$location$street$name, month=document[[2]]$month, outcome_status=document[[2]]$outcome_status$category)
document <- rbind(master, d1, d2)
leaflet() %>% addTiles() %>% addCircles(lng = document$lon, lat = document$lat, color = pal(document$category)
)
head(document)
document$lat
document$lon
library(downloader)
library(rgdal)
library(httr)
library(ggplot2)
library(ggmap)
library(lattice)
library(sp)
library(maptools)
library(classInt)
library(RColorBrewer)
library(lme4)
library(merTools)
library(dplyr)
library(spatialEco)
library(cowplot)
# download geojson
u <- "http://statistics.data.gov.uk/boundaries/E08000012.json"
# store in temporary directory
downloader::download(url = u, destfile = "/tmp/lpool.geojson")
lpool <- readOGR(dsn = "/tmp/lpool.geojson", layer = "OGRGeoJSON")
# access coords slot
lpool <- lpool@polygons[[1]]@Polygons[[1]]@coords
# build lat/lon + date string to send with postrequest
curl.string <- paste0('poly=',paste0(sprintf('%s,%s',lpool[,2], lpool[,1])
, collapse = ':'))
# build dates list for loop
dates = c("2012-01", "2012-02", "2012-03", "2012-04", "2012-05", "2012-06",
"2012-07", "2012-08", "2012-09", "2012-10", "2012-11", "2012-12")
document <- lapply(dates, function(month) {
# format acceptable packet for http request
curl.string <- list(poly=c(curl.string), date=c(month))
# post custom polygon to police api
r <- httr::POST("https://data.police.uk/api/crimes-street/all-crime",
body = curl.string, encode="multipart", verbose())
json <- content(r, "text", encoding = "ISO-8859-1")
# return as data.frame
jsonlite::fromJSON(txt=json)
})
# cast lat/lon columns to numeric data type
document$lat <- as.numeric(document$lat)
document$lon <- as.numeric(document$lon)
# convert data.frame to shapefile in rgdal
coordinates(document) <- ~lon+lat
proj4string(document) <- CRS("+init=epsg:4326") # WGS 84
# subsetting operations
# document <- document[document$category == "violent-crime",]
# write once
writeOGR(document, "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
"crimes", driver = "ESRI Shapefile")
# crimes <- readOGR(dsn = "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
# layer = "crimes")
# crimes <- crimes[sample(nrow(crimes), 500), ]
crmes
crimes
document
# build master data.frame to append data.frame for individual months to
master <- data.frame(id=numeric(0), category=character(0), lat=character(0),
lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude,
lon=document[[1]]$location$longitude, id=document[[1]]$id,
name=document[[1]]$location$street$name, month=document[[1]]$month,
outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude,
lon=document[[2]]$location$longitude, id=document[[2]]$id,
name=document[[2]]$location$street$name, month=document[[2]]$month,
outcome_status=document[[2]]$outcome_status$category)
d3 <- data.frame(category=document[[3]]$category,lat=document[[3]]$location$latitude,
lon=document[[3]]$location$longitude, id=document[[3]]$id,
name=document[[3]]$location$street$name, month=document[[3]]$month,
outcome_status=document[[3]]$outcome_status$category)
d4 <- data.frame(category=document[[4]]$category,lat=document[[4]]$location$latitude,
lon=document[[4]]$location$longitude, id=document[[4]]$id,
name=document[[4]]$location$street$name, month=document[[4]]$month,
outcome_status=document[[4]]$outcome_status$category)
d5 <- data.frame(category=document[[5]]$category,lat=document[[5]]$location$latitude,
lon=document[[5]]$location$longitude, id=document[[5]]$id,
name=document[[5]]$location$street$name, month=document[[5]]$month,
outcome_status=document[[5]]$outcome_status$category)
d6 <- data.frame(category=document[[6]]$category,lat=document[[6]]$location$latitude,
lon=document[[6]]$location$longitude, id=document[[6]]$id,
name=document[[6]]$location$street$name, month=document[[6]]$month,
outcome_status=document[[6]]$outcome_status$category)
d7 <- data.frame(category=document[[7]]$category,lat=document[[7]]$location$latitude,
lon=document[[7]]$location$longitude, id=document[[7]]$id,
name=document[[7]]$location$street$name, month=document[[7]]$month,
outcome_status=document[[7]]$outcome_status$category)
d8 <- data.frame(category=document[[8]]$category,lat=document[[8]]$location$latitude,
lon=document[[8]]$location$longitude, id=document[[8]]$id,
name=document[[8]]$location$street$name, month=document[[8]]$month,
outcome_status=document[[8]]$outcome_status$category)
d9 <- data.frame(category=document[[9]]$category,lat=document[[9]]$location$latitude,
lon=document[[9]]$location$longitude, id=document[[9]]$id,
name=document[[9]]$location$street$name, month=document[[9]]$month,
outcome_status=document[[9]]$outcome_status$category)
d10 <- data.frame(category=document[[10]]$category,lat=document[[10]]$location$latitude,
lon=document[[10]]$location$longitude, id=document[[10]]$id,
name=document[[10]]$location$street$name, month=document[[10]]$month,
outcome_status=document[[10]]$outcome_status$category)
d11 <- data.frame(category=document[[11]]$category,lat=document[[11]]$location$latitude,
lon=document[[11]]$location$longitude, id=document[[11]]$id,
name=document[[11]]$location$street$name, month=document[[11]]$month,
outcome_status=document[[11]]$outcome_status$category)
d12 <- data.frame(category=document[[12]]$category,lat=document[[12]]$location$latitude,
lon=document[[12]]$location$longitude, id=document[[12]]$id,
name=document[[12]]$location$street$name, month=document[[12]]$month,
outcome_status=document[[12]]$outcome_status$category)
# rbind each month to master data.frame
document <- rbind(master, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12)
# document <- rbind(master, d1, d2)
# take a sample from population
document <- document[sample(nrow(document), 45000),]
# convert factors to chr class
document <- rapply(document, as.character, classes="factor", how="replace")
document
nrow(document)
# build master data.frame to append data.frame for individual months to
master <- data.frame(id=numeric(0), category=character(0), lat=character(0),
lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude,
lon=document[[1]]$location$longitude, id=document[[1]]$id,
name=document[[1]]$location$street$name, month=document[[1]]$month,
outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude,
lon=document[[2]]$location$longitude, id=document[[2]]$id,
name=document[[2]]$location$street$name, month=document[[2]]$month,
outcome_status=document[[2]]$outcome_status$category)
d3 <- data.frame(category=document[[3]]$category,lat=document[[3]]$location$latitude,
lon=document[[3]]$location$longitude, id=document[[3]]$id,
name=document[[3]]$location$street$name, month=document[[3]]$month,
outcome_status=document[[3]]$outcome_status$category)
d4 <- data.frame(category=document[[4]]$category,lat=document[[4]]$location$latitude,
lon=document[[4]]$location$longitude, id=document[[4]]$id,
name=document[[4]]$location$street$name, month=document[[4]]$month,
outcome_status=document[[4]]$outcome_status$category)
d5 <- data.frame(category=document[[5]]$category,lat=document[[5]]$location$latitude,
lon=document[[5]]$location$longitude, id=document[[5]]$id,
name=document[[5]]$location$street$name, month=document[[5]]$month,
outcome_status=document[[5]]$outcome_status$category)
d6 <- data.frame(category=document[[6]]$category,lat=document[[6]]$location$latitude,
lon=document[[6]]$location$longitude, id=document[[6]]$id,
name=document[[6]]$location$street$name, month=document[[6]]$month,
outcome_status=document[[6]]$outcome_status$category)
d7 <- data.frame(category=document[[7]]$category,lat=document[[7]]$location$latitude,
lon=document[[7]]$location$longitude, id=document[[7]]$id,
name=document[[7]]$location$street$name, month=document[[7]]$month,
outcome_status=document[[7]]$outcome_status$category)
d8 <- data.frame(category=document[[8]]$category,lat=document[[8]]$location$latitude,
lon=document[[8]]$location$longitude, id=document[[8]]$id,
name=document[[8]]$location$street$name, month=document[[8]]$month,
outcome_status=document[[8]]$outcome_status$category)
d9 <- data.frame(category=document[[9]]$category,lat=document[[9]]$location$latitude,
lon=document[[9]]$location$longitude, id=document[[9]]$id,
name=document[[9]]$location$street$name, month=document[[9]]$month,
outcome_status=document[[9]]$outcome_status$category)
d10 <- data.frame(category=document[[10]]$category,lat=document[[10]]$location$latitude,
lon=document[[10]]$location$longitude, id=document[[10]]$id,
name=document[[10]]$location$street$name, month=document[[10]]$month,
outcome_status=document[[10]]$outcome_status$category)
d11 <- data.frame(category=document[[11]]$category,lat=document[[11]]$location$latitude,
lon=document[[11]]$location$longitude, id=document[[11]]$id,
name=document[[11]]$location$street$name, month=document[[11]]$month,
outcome_status=document[[11]]$outcome_status$category)
d12 <- data.frame(category=document[[12]]$category,lat=document[[12]]$location$latitude,
lon=document[[12]]$location$longitude, id=document[[12]]$id,
name=document[[12]]$location$street$name, month=document[[12]]$month,
outcome_status=document[[12]]$outcome_status$category)
# rbind each month to master data.frame
document <- rbind(master, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12)
# document <- rbind(master, d1, d2)
# take a sample from population
# document <- document[sample(nrow(document), 45000),]
# convert factors to chr class
document <- rapply(document, as.character, classes="factor", how="replace")
document
nrow(document)
# cast lat/lon columns to numeric data type
document$lat <- as.numeric(document$lat)
document$lon <- as.numeric(document$lon)
# convert data.frame to shapefile in rgdal
coordinates(document) <- ~lon+lat
proj4string(document) <- CRS("+init=epsg:4326") # WGS 84
# subsetting operations
# document <- document[document$category == "violent-crime",]
# write once
writeOGR(document, "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
"crimes", driver = "ESRI Shapefile")
# crimes <- readOGR(dsn = "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
# layer = "crimes")
# crimes <- crimes[sample(nrow(crimes), 500), ]
# cast lat/lon columns to numeric data type
document$lat <- as.numeric(document$lat)
document$lon <- as.numeric(document$lon)
# convert data.frame to shapefile in rgdal
coordinates(document) <- ~lon+lat
proj4string(document) <- CRS('+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +datum=OSGB36 +units=m +no_defs') # WGS 84
# subsetting operations
# document <- document[document$category == "violent-crime",]
# write once
writeOGR(document, "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
"crimes", driver = "ESRI Shapefile")
# crimes <- readOGR(dsn = "/Users/samcomber/Documents/spatial_analysis/shp/crimes",
# layer = "crimes")
# crimes <- crimes[sample(nrow(crimes), 500), ]
document
head(document)
# download geojson
u <- "http://statistics.data.gov.uk/boundaries/E08000012.json"
# store in temporary directory
downloader::download(url = u, destfile = "/tmp/lpool.geojson")
lpool <- readOGR(dsn = "/tmp/lpool.geojson", layer = "OGRGeoJSON")
# access coords slot
lpool <- lpool@polygons[[1]]@Polygons[[1]]@coords
# build lat/lon + date string to send with postrequest
curl.string <- paste0('poly=',paste0(sprintf('%s,%s',lpool[,2], lpool[,1])
, collapse = ':'))
# build dates list for loop
dates = c("2012-01", "2012-02", "2012-03", "2012-04", "2012-05", "2012-06",
"2012-07", "2012-08", "2012-09", "2012-10", "2012-11", "2012-12")
document <- lapply(dates, function(month) {
# format acceptable packet for http request
curl.string <- list(poly=c(curl.string), date=c(month))
# post custom polygon to police api
r <- httr::POST("https://data.police.uk/api/crimes-street/all-crime",
body = curl.string, encode="multipart", verbose())
json <- content(r, "text", encoding = "ISO-8859-1")
# return as data.frame
jsonlite::fromJSON(txt=json)
})
# build master data.frame to append data.frame for individual months to
master <- data.frame(id=numeric(0), category=character(0), lat=character(0),
lon=character(0), month=character(0), outcome_status=character(0))
d1 <- data.frame(category=document[[1]]$category,lat=document[[1]]$location$latitude,
lon=document[[1]]$location$longitude, id=document[[1]]$id,
name=document[[1]]$location$street$name, month=document[[1]]$month,
outcome_status=document[[1]]$outcome_status$category)
d2 <- data.frame(category=document[[2]]$category,lat=document[[2]]$location$latitude,
lon=document[[2]]$location$longitude, id=document[[2]]$id,
name=document[[2]]$location$street$name, month=document[[2]]$month,
outcome_status=document[[2]]$outcome_status$category)
d3 <- data.frame(category=document[[3]]$category,lat=document[[3]]$location$latitude,
lon=document[[3]]$location$longitude, id=document[[3]]$id,
name=document[[3]]$location$street$name, month=document[[3]]$month,
outcome_status=document[[3]]$outcome_status$category)
d4 <- data.frame(category=document[[4]]$category,lat=document[[4]]$location$latitude,
lon=document[[4]]$location$longitude, id=document[[4]]$id,
name=document[[4]]$location$street$name, month=document[[4]]$month,
outcome_status=document[[4]]$outcome_status$category)
d5 <- data.frame(category=document[[5]]$category,lat=document[[5]]$location$latitude,
lon=document[[5]]$location$longitude, id=document[[5]]$id,
name=document[[5]]$location$street$name, month=document[[5]]$month,
outcome_status=document[[5]]$outcome_status$category)
d6 <- data.frame(category=document[[6]]$category,lat=document[[6]]$location$latitude,
lon=document[[6]]$location$longitude, id=document[[6]]$id,
name=document[[6]]$location$street$name, month=document[[6]]$month,
outcome_status=document[[6]]$outcome_status$category)
d7 <- data.frame(category=document[[7]]$category,lat=document[[7]]$location$latitude,
lon=document[[7]]$location$longitude, id=document[[7]]$id,
name=document[[7]]$location$street$name, month=document[[7]]$month,
outcome_status=document[[7]]$outcome_status$category)
d8 <- data.frame(category=document[[8]]$category,lat=document[[8]]$location$latitude,
lon=document[[8]]$location$longitude, id=document[[8]]$id,
name=document[[8]]$location$street$name, month=document[[8]]$month,
outcome_status=document[[8]]$outcome_status$category)
d9 <- data.frame(category=document[[9]]$category,lat=document[[9]]$location$latitude,
lon=document[[9]]$location$longitude, id=document[[9]]$id,
name=document[[9]]$location$street$name, month=document[[9]]$month,
outcome_status=document[[9]]$outcome_status$category)
d10 <- data.frame(category=document[[10]]$category,lat=document[[10]]$location$latitude,
lon=document[[10]]$location$longitude, id=document[[10]]$id,
name=document[[10]]$location$street$name, month=document[[10]]$month,
outcome_status=document[[10]]$outcome_status$category)
d11 <- data.frame(category=document[[11]]$category,lat=document[[11]]$location$latitude,
lon=document[[11]]$location$longitude, id=document[[11]]$id,
name=document[[11]]$location$street$name, month=document[[11]]$month,
outcome_status=document[[11]]$outcome_status$category)
d12 <- data.frame(category=document[[12]]$category,lat=document[[12]]$location$latitude,
lon=document[[12]]$location$longitude, id=document[[12]]$id,
name=document[[12]]$location$street$name, month=document[[12]]$month,
outcome_status=document[[12]]$outcome_status$category)
# rbind each month to master data.frame
document <- rbind(master, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12)
# document <- rbind(master, d1, d2)
# take a sample from population
# document <- document[sample(nrow(document), 45000),]
# convert factors to chr class
document <- rapply(document, as.character, classes="factor", how="replace")
head(document)
?write.csv
write.csv(document, file= "crimes")
list.files()
getwd()
setwd("/Users/samcomber/Documents")
getwd()
write.csv(document, file= "crimes")
write.csv(document, file= "crimes.csv")
getwd()
setwd("/Users/samcomber/Documents/Web_map_two")
list.files()
?read.csv
read.csv("crimes.csv", header=TRUE)
document <- read.csv("crimes.csv", header=TRUE)
nrow(document)
head(document)
class(document)
list.files()
document <- read.csv("crimes.csv", header=TRUE)
document <- read.csv("crimes.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
getwd()
document <- read.csv("crimes.csv", header=TRUE, stringsAsFactors=FALSE)
document <- read.csv("crimes.csv", header=TRUE, stringsAsFactors=FALSE)
document <- read.csv("crimes.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
